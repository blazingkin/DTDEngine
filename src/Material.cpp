#include "Material.h"
#include <string>
using namespace glm;
using namespace std;
std::map<std::string, std::shared_ptr<Material>> materials;
Material::Material() {
    shine = 1;
    Diffuse = glm::vec3(0.3, 0.3, 0.3);
    Ambient = glm::vec3(0.1, 0.1, 0.1);
    Specular = glm::vec3(0.3, 0.3, 0.3);
}

void addMaterial(std::string s, Material m) {
    materials[s] = std::make_shared<Material>(m);
} 	

void initMaterials(const std::string& resourceDirectory) {
		Material shinyBluePlastic;
			shinyBluePlastic.Ambient = vec3(0.02, 0.04, 0.2);
			shinyBluePlastic.Diffuse = vec3(0, 0.15, 0.9);
			shinyBluePlastic.Specular = vec3(0.14, 0.2, 0.6);
			shinyBluePlastic.shine = 120;
		Material shinyWhitePlastic;
			shinyWhitePlastic.Ambient = vec3(0, 0, 0);
			shinyWhitePlastic.Diffuse = vec3(0.65, 0.65, 0.65);
			shinyWhitePlastic.Specular = vec3(0.20, 0.20, 0.20);
			shinyWhitePlastic.shine = 0.25;
		Material flatGrey;
			flatGrey.Ambient = vec3(0.13, 0.13, 0.14);
			flatGrey.Diffuse = vec3(0.3, 0.3, 0.4);
			flatGrey.Specular = vec3(0.05, 0.05, 0.05);
			flatGrey.shine = 0.2;
		Material darkGrey;
			flatGrey.Ambient = vec3(0.05, 0.05, 0.05);
			flatGrey.Diffuse = vec3(0.05, 0.05, 0.1);
			flatGrey.Specular = vec3(0.025, 0.025, 0.025);
			flatGrey.shine = 0.2;
		Material shinyGrey;
			flatGrey.Ambient = vec3(0.13, 0.13, 0.14);
			flatGrey.Diffuse = vec3(0.3, 0.3, 0.4);
			flatGrey.Specular = vec3(0.1, 0.1, 0.1);
			flatGrey.shine = 0.3;
		Material brass;
			brass.Ambient = vec3(0.3294, 0.2235, 0.02745);
			brass.Diffuse = vec3(0.7804, 0.5686, 0.11373);
			brass.Specular = vec3(0.9922, 0.941176, 0.80784);
			brass.shine = 27.9;
		Material grass;
			grass.Ambient = vec3(0.0, 0.2235, 0.0);
			grass.Diffuse = vec3(0.1004, 0.686, 0.31373);
			grass.Specular = vec3(0.09922, 0.0941176, 0.080784);
			grass.shine = 1;
		Material tree;
			tree.Ambient = vec3(0.0, 0.2235, 0.0);
			tree.Diffuse = vec3(0.1004, 0.686, 0.31373);
			tree.Specular = vec3(0.03, 0.300, 0.080784);
			tree.shine = 1;
		Material fur;
			fur.Ambient = vec3(50.0/255.0, 30.0/255.0, 15.0/255.0);
			fur.Diffuse = vec3(51.0/255.0, 37.0/255.0, 18.0/255.0);
			fur.Specular = vec3(10.0/255.0, 6.0/255.0, 3.0/255.0);
			fur.shine = 0;
		Material shadow;
			shadow.Ambient = vec3(0);
			shadow.Diffuse = vec3(0);
			shadow.Specular = vec3(0);
			shadow.shine = 0;
		Material straw;
			straw.Ambient = vec3(228.0/500.0, 217.0 / 500.0, 111.0 / 500.0);
			straw.Diffuse = vec3(228.0/500.0, 217.0 / 500.0, 111.0 / 500.0);
			straw.Specular = vec3(0.0, 0.0, 0.0);
			straw.shine = 1;
		Material clothing;
			clothing.Ambient = vec3(0.35, 0.35, 0.35);
			clothing.Diffuse = vec3(0.6, 0.6, 0.6);
			clothing.Specular = vec3(0.05, 0.05, 0.05);
			clothing.shine = 1;
		Material tanSkin;
			tanSkin.Ambient = vec3(0.35, 0.35, 0.35);
			tanSkin.Diffuse = vec3(0.5, 0.5, 0.5);
			tanSkin.Specular = vec3(0.15, 0.15, 0.15);
			tanSkin.shine = 1;
		Material virus;
			virus.Ambient = RGBToVec3(45, 15, 45);
			virus.Diffuse = RGBToVec3(0x7C238C) - virus.Ambient;
			virus.Specular = vec3(0.13, 0.0, 0.05);
			virus.shine = 8;
		Material houseSiding;
			houseSiding.Ambient = RGBToVec3(60, 60, 40);
			houseSiding.Diffuse = RGBToVec3(180, 176, 126);
			houseSiding.Specular = RGBToVec3(10,10,10);
			houseSiding.shine = 0.6;
		Material houseRoof;
			houseRoof.Ambient = RGBToVec3(5, 40, 70);
			houseRoof.Diffuse = RGBToVec3(12, 141, 122);
			houseRoof.Specular = RGBToVec3(5,5,5);
			houseRoof.shine = 0.4;
		Material towerMaterial;
			towerMaterial.Ambient = RGBToVec3(60, 80, 60);
			towerMaterial.Diffuse = RGBToVec3(108, 150, 108);
			towerMaterial.Specular = RGBToVec3(20,20,20);
			towerMaterial.shine = 8;
		Material redMat;
			redMat.Ambient = vec3(0.2, 0.04, 0.02);
			redMat.Diffuse = vec3(0.9, 0.15, 0);
			redMat.Specular = vec3(0.6, 0.2, 0.12);
			redMat.shine = 23;
		Material floor;
			floor.Ambient = vec3(0.0, 0.2235, 0.0);
			floor.Diffuse = vec3(0.1004, 0.686, 0.31373);
			floor.Specular = vec3(0.009922, 0.00941176, 0.0080784);
			floor.shine = 0.01;
		Material whiteAmbient;
			whiteAmbient.Ambient = vec3(1.0, 1.0, 1.0);
			whiteAmbient.Diffuse = vec3(0.0, 0.0, 0.0);
			whiteAmbient.Specular = vec3(0.0, 0.0, 0.0);
			whiteAmbient.shine = 0.01;
		materials["shiny_blue_plastic"]  = make_shared<Material>(shinyBluePlastic);
		materials["shiny_white_plastic"]  = make_shared<Material>(shinyWhitePlastic);
		materials["flat_grey"] = make_shared<Material>(flatGrey);
		materials["flat_gray"] = make_shared<Material>(flatGrey);
		materials["dark_gray"] = make_shared<Material>(darkGrey);
		materials["dark_grey"] = make_shared<Material>(darkGrey);
		materials["shiny_gray"] = make_shared<Material>(shinyGrey);
		materials["shiny_gray"] = make_shared<Material>(shinyGrey);
		materials["brass"] = make_shared<Material>(brass);
		materials["grass"] = make_shared<Material>(grass);
		materials["tree"] = make_shared<Material>(tree);
		materials["fur"] = make_shared<Material>(fur);
		materials["shadow"] = make_shared<Material>(shadow);
		materials["straw"] = make_shared<Material>(straw);
		materials["clothing"] = make_shared<Material>(clothing);
		materials["tan_skin"] = make_shared<Material>(tanSkin);
		materials["virus"] = make_shared<Material>(virus);
		materials["house_siding"] = make_shared<Material>(houseSiding);
		materials["house_roof"] = make_shared<Material>(houseRoof);
		materials["tower"] = make_shared<Material>(towerMaterial);
		materials["redMat"] = make_shared<Material>(redMat);
		materials["floor"] = make_shared<Material>(floor);
		materials["white_ambient"] = make_shared<Material>(whiteAmbient);
	}